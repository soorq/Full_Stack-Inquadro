version: '3.8'

services:
  nginx:
    hostname: nginx
    container_name: nginx
    build:
      context: ./nginx/
      dockerfile: Dockerfile
    ports:
      - '80:80'
      - '443:443'
    restart: always
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    environment:
      - VIRTUAL_HOST=localhost
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=localhost
      - LETSENCRYPT_EMAIL=karpuhinlox12@gmail.com

  api:
    image: api:latest
    container_name: api
    hostname: api
    build:
      context: ./server/
      dockerfile: Dockerfile
      target: dev
    env_file:
      - ./server/.env
    ports:
      - '1010:1010'
    restart: always
    command: npx nest start --watch

  certbot:
    container_name: certbot
    hostname: certbot
    image: certbot/certbot
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    entrypoint: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; certbot renew; done'"

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    hostname: postgres
    command:
      - 'postgres'
      - '-c'
      - 'max_connections=50'
      - '-c'
      - 'shared_buffers=1GB'
      - '-c'
      - 'effective_cache_size=4GB'
      - '-c'
      - 'work_mem=16MB'
      - '-c'
      - 'maintenance_work_mem=512MB'
      - '-c'
      - 'random_page_cost=1.1'
      - '-c'
      - 'temp_file_limit=10GB'
      - '-c'
      - 'log_min_duration_statement=200ms'
      - '-c'
      - 'idle_in_transaction_session_timeout=10s'
      - '-c'
      - 'lock_timeout=1s'
      - '-c'
      - 'statement_timeout=60s'
      - '-c'
      - 'shared_preload_libraries=pg_stat_statements'
      - '-c'
      - 'pg_stat_statements.max=10000'
      - '-c'
      - 'pg_stat_statements.track=all'
    env_file:
      - ./server/.env
    volumes:
      - ./database:/docker-entrypoint-initdb.d
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    ports:
      - '5432:5432'

  redis:
    image: redis:7.0.8-alpine
    container_name: redis
    hostname: redis
    restart: always
    ports:
      - '6379:6379'
    env_file:
      - server/.env

volumes:
  db-data:
  pgadmin-data:
