version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    hostname: postgres
    command:
      - 'postgres'
      - '-c'
      - 'max_connections=50'
      - '-c'
      - 'shared_buffers=1GB'
      - '-c'
      - 'effective_cache_size=4GB'
      - '-c'
      - 'work_mem=16MB'
      - '-c'
      - 'maintenance_work_mem=512MB'
      - '-c'
      - 'random_page_cost=1.1'
      - '-c'
      - 'temp_file_limit=10GB'
      - '-c'
      - 'log_min_duration_statement=200ms'
      - '-c'
      - 'idle_in_transaction_session_timeout=10s'
      - '-c'
      - 'lock_timeout=1s'
      - '-c'
      - 'statement_timeout=60s'
      - '-c'
      - 'shared_preload_libraries=pg_stat_statements'
      - '-c'
      - 'pg_stat_statements.max=10000'
      - '-c'
      - 'pg_stat_statements.track=all'
    env_file:
      - ./.env
    volumes:
      - ./database:/docker-entrypoint-initdb.d
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    ports:
      - '5432:5432'

  pgadmin:
    container_name: pgadmin
    hostname: pgadmin
    image: dpage/pgadmin4:7.2
    env_file:
      - ./.env
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - '5050:80'
    restart: unless-stopped
    depends_on:
      - postgres
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G

  redis:
    image: redis:7.0.8-alpine
    container_name: redis
    hostname: redis
    restart: always
    ports:
      - '6379:6379'
    env_file:
      - ./.env

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    env_file:
      - ./.env
    ports:
      - "8081:8081"
    depends_on:
      - redis

  # api:
  #   container_name: api
  #   hostname: api
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile
  #   env_file:
  #     - ./.env
  #   ports:
  #     - '1010:1010'
  #   depends_on:
  #     - postgres
  #     - redis
  #   restart: always

volumes:
  db-data:
  pgadmin-data:
